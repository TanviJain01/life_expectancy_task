import os, pickle
import numpy as np

class RidgeRegression:
    def __init__(self, alpha=1.0):
        self.alpha = alpha
        self.theta = None

    def fit(self, X, y):
        n = X.shape[1]
        I = np.eye(n)
        I[0, 0] = 0
        self.theta = np.linalg.pinv(X.T @ X + self.alpha * I) @ (X.T @ y)
        return self

    def predict(self, X):
        return X @ self.theta

X = np.asarray(X_train, dtype=float)
y = np.asarray(y_train, dtype=float).reshape(-1, 1)

if X.ndim == 1:
    X = X.reshape(-1, 1)

if not np.allclose(X[:, 0], 1.0):
    X = np.hstack([np.ones((X.shape[0], 1), dtype=float), X])

model = RidgeRegression(alpha=1.0)
model.fit(X, y)

os.makedirs("models", exist_ok=True)
with open("models/regression_model3.pkl", "wb") as f:
    pickle.dump(model, f)


