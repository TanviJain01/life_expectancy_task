import os, pickle
import numpy as np

class PolynomialRegression:
    def __init__(self, degree=2):
        self.degree = degree
        self.theta = None

    def _poly_features(self, X):
        feats = [X]
        for d in range(2, self.degree+1):
            feats.append(X ** d)
        return np.hstack(feats)

    def fit(self, X, y):
        Xp = self._poly_features(X)
        Xpi = np.hstack([np.ones((Xp.shape[0], 1)), Xp])
        self.theta = np.linalg.pinv(Xpi.T @ Xpi) @ (Xpi.T @ y)
        self.X_shape = X.shape[1]
        return self

    def predict(self, X):
        Xp = self._poly_features(X)
        Xpi = np.hstack([np.ones((Xp.shape[0], 1)), Xp])
        return Xpi @ self.theta

